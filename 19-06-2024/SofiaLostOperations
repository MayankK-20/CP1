/**
 *    author:  MK_20
 *    created: 2024-06-19 15:01:41
 **/
//Question URL: https://codeforces.com/problemset/problem/1980/C
//Rating: 1300

#include<iostream>
#include<numeric>
#include<vector>
#include<algorithm>
#include<map>
using namespace std;

void solve(){
    int n;
    cin>>n;
    vector<int> org(n);
    map<int,int> need;
    vector<int> found(n);
    for (int i=0; i<n; i++){
        cin>>org[i];
    }
    for (int i=0; i<n; i++){
        cin>>found[i];
        if (org[i]!=found[i]){
            need[found[i]]++;
        }
    }
    int m;
    cin>>m;
    for (int i=0; i<m; i++){
        cin>>n;
        need[n]--;
    }
    bool flag=true;
    for (int i=0; i<found.size(); i++){
        if (need[found[i]]>0){
            cout<<"NO\n";
            return;
        }
        if (n==found[i]){
            flag=false;
        }
    }
    if (flag){
        cout<<"NO\n";
        return;
    }
    cout<<"YES\n";
}

int main(){

    int t;
    cin>>t;
    while(t--){
        solve();
    }

    return 0;
}
